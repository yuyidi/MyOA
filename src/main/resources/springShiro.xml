<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<bean id="authcFormAuthenticationFilter" class="com.yyd.myoa.interceptor.AuthcFormAuthenticationFilter">
		<property name="usernameParam" value="userId" />
		<property name="userInfoService" ref="userInfoService" />
	</bean>
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login" />
	</bean>
	<!-- shiro filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 调用我们配置的权限管理器 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" /><!-- 登录请求地址 -->
		<property name="successUrl" value="/index" />	 <!-- 配置我们在登录页登录成功后的跳转地址 -->
		<property name="unauthorizedUrl" value="/404" />  <!-- 如果您请求的资源不再您的权限范围，则跳转到/404请求地址 -->
		<!-- 权限配置 -->
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="authcFormAuthenticationFilter" />
				<entry key="logout" value-ref="logout"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!-- anon 表示不需要任何权限即可访问 -->
				/assets/**=anon
				/login.*=anon
				/logout=logout
				/400=anon
				/404=anon
				/500=anon
				/user-info/session=anon
				/user-info/table.*=anon
				/user-info/register=anon
				/user-info/demo.*=anon
				/user-info/verify*=anon
				<!-- 所有的请求 (除去配置的静态资源请求或请求地址为anon的请求都要通过登录验证,如果未登录则跳到/login） -->
				/**=authc
			</value>
		</property>
	</bean>

	<!-- shiro 权限根对象 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<!-- 使用下面配置的缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	<!--散列密码的生成规则 [算法/私盐/公盐生成/加密迭代次数]  -->
	<bean id="hashService" class="org.apache.shiro.crypto.hash.DefaultHashService">
<!-- 		<property name="hashAlgorithmName" value="md5"/> -->
<!-- 		<property name="hashIterations" value="2"/> -->
<!-- 		<property name="generatePublicSalt" value="true"/> -->
	</bean>
	<!-- 散列出的值进行格式化 [给hash的结果添加一些前缀] -->
	<bean id="hashFormat" class="org.apache.shiro.crypto.hash.format.Shiro1CryptFormat" />
	<bean id="hashFormatFactory"
		class="org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory" />
	<bean id="passwordService"
		class="org.apache.shiro.authc.credential.DefaultPasswordService">
		<property name="hashService" ref="hashService" />
		<property name="hashFormat" ref="hashFormat" />
		<property name="hashFormatFactory" ref="hashFormatFactory" />
	</bean>
	<!-- PasswordMatcher 使用默认方式进行解密，将用户登录明文密码再次加密 ,salt保存在散列值中；没有实现如密码重试次数限制-->
<!-- 	<bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher"> -->
<!-- 		<property name="passwordService" ref="passwordService" /> -->
<!-- 	</bean> -->
	<!-- 自定义解密，密码验证提供自己的盐 -->
	<bean id="passwordMatcher" class="com.yyd.myoa.shiro.credentials.RetryLimitHashedCredentialsMatcher">
<!-- 		<property name="passwordService" ref="passwordService" /> -->
	</bean>

	<!-- shiro 权限鉴定 -->
	<bean id="myRealm" class="com.yyd.myoa.shiro.MyShiroRealm">
		<property name="credentialsMatcher" ref="passwordMatcher"></property>
	</bean>
</beans>		