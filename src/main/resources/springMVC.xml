<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- 配置首页请求道index页面 -->
	<mvc:view-controller path="/login" view-name="login" />
	<!-- 简单配置 -->
	<!-- <mvc:annotation-driven /> -->

	<!-- 自动扫描controller包下所有的类 ，并作为springMVC的控制器 -->
	<context:component-scan base-package="com.yyd.myoa.controller" />

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yyd.myoa.interceptor.GlobalInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
		<!-- 自定义的异常处理 -->
	<bean id="exceptionHandler" class="com.yyd.myoa.exception.MVCExceptionHandler"/>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="fastJsonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>

	<!-- springMVC 静态资源处理 -->
	<mvc:default-servlet-handler />
	<mvc:resources location="/assets/" mapping="/assets/**"/>
	<!-- 在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，会在Spring MVC上下文中定义一个 org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的 
		Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 一般Web应用服务器默认的Servlet名称是"default"，因此DefaultServletHttpRequestHandler可以找到它。如果你所有的Web应用服务器的默认Servlet名称不是"default"，则需要通过default-servlet-name属性显示指定： 
		<mvc:default-servlet-handler default-servlet-name="所使用的Web服务器默认使用的Servlet名称" /> -->

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<!-- <property name="defaultContentType" value="text/html" /> -->
		<!-- 否启用扩展名支持，默认就是true -->
		<property name="favorPathExtension" value="true"></property>
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<property name="viewResolvers">
			<list>
				<!-- 配置freemaker 视图解析器 -->
				<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
					<property name="cache" value="false" />
					<property name="prefix" value="/" />
					<property name="suffix" value=".ftl" />
					<property name="contentType" value="text/html; charset=UTF-8" />
					<property name="requestContextAttribute" value="rc" /><!-- 把Spring的RequestContext对象暴露为对象rc,利用${rc.contextPath}来获取应用程序的contextPath -->
					<!-- <property name="exposeSpringMacroHelpers" value="true" />设置是否通过Spring的宏库暴露一个RequestContext供外部使用 -->
					 <!--<property name="exposeRequestAttributes" value="true" />设置是否将所有的 request属性在与模板进行合并之前添加到model中 -->
					 <!--<property name="exposeSessionAttributes" value="true" />设置是否将所有的 session属性在与模板进行合并之前添加到model中 -->
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView">
					<property name="serializerFeature">
						<list>
							<value>UseISO8601DateFormat</value>
							<value>DisableCircularReferenceDetect</value>
							<value>WriteMapNullValue</value>
							<value>WriteNullNumberAsZero</value>
						</list>
					</property>
					<property name="charset" value="UTF8" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>


	<!-- freemaker配置 -->
	<bean id="freemarkerConfig" class="com.yyd.myoa.shiro.ShiroTagFreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/view/" /><!-- 指定请求视图路径 -->
		<property name="defaultEncoding" value="UTF-8" /><!-- 指定编码 -->
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="freemarkerVariables">
			<map>
				<entry key="project_title" value="MYOA 我的办公自动化"></entry>
			</map>
		</property>
	</bean>

	<!-- springMVC上传配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200" />
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
			</list>
		</property>
	</bean>
</beans>
